---
name: Run-all Plan Terragrunt
on:
  workflow_dispatch:
    inputs:
      tf_working_dir:
        description: Terragrunt working directory
        required: false
        default: terragrunt
  # push:
  pull_request:
    branches:
      - main

env:
  TG_DIR: ${{ inputs.tf_working_dir }}

jobs:
  checks:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2.1.3
        with:
          tf_version: ${{ vars.TF_VERSION }}
          tg_version: ${{ vars.TG_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_command: hclfmt --terragrunt-check --terragrunt-diff

  init:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-22.04
    needs: [checks]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD }}
          role-session-name: GitHub-Actions-OIDC
          role-duration-seconds: 1700
          aws-region: ${{ vars.AWS_REGION }}

      - name: Init
        uses: gruntwork-io/terragrunt-action@v2.1.3
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_version: ${{ vars.TF_VERSION }}
          tg_version: ${{ vars.TG_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_command: run-all init --terragrunt-non-interactive

  plan:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-22.04
    needs: [checks, init]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD }}
          role-session-name: GitHub-Actions-OIDC
          role-duration-seconds: 1700
          aws-region: ${{ vars.AWS_REGION }}

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2.1.3
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_version: ${{ vars.TF_VERSION }}
          tg_version: ${{ vars.TG_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_command: run-all plan --terragrunt-non-interactive
